//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : Newton.cpp
//  @ Date : 17.05.2023
//  @ Author : 
//
//


#include "Newton.h"

Newton::Newton() {

}

Newton::~Newton() {

}

long double Newton::newton(int n, int k, Factorial* factorial) {
    N = n - k;
    long NbyK = 1;
    if(k >= N) {
        for (int i = k + 1; i <= n; i++) {
            NbyK *= i;
        }
        return (NbyK/factorial->factorial(n-k));
    }
    else {
        for(int i = N+1; i <= n; i++) {
            NbyK *= i;
        }
        return (NbyK / factorial->factorial(k));
    }
}

